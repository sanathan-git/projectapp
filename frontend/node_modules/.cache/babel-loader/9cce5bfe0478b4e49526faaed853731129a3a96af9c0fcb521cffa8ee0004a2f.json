{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n  if (values.name === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"Name should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email Didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password didn't match\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","name","email","test","password","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/firstapp/frontend/src/SignupValidation.js"],"sourcesContent":["function Validation(values){\r\n    let error = {}\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    const password_pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n\r\n    if(values.name === \"\") {        \r\n        error.name = \"Name should not be empty\"    \r\n    }      \r\n    else {        \r\n        error.name = \"\"    \r\n    }\r\n\r\n\r\nif(values.email === \"\") {        \r\n    error.email = \"Name should not be empty\"    \r\n}     \r\nelse if(!email_pattern.test(values.email)) {        \r\n    error.email = \"Email Didn't match\"   \r\n}else {        \r\n    error.email = \"\"    \r\n}\r\n\r\nif(values.password === \"\") {        \r\n    error.password = \"Password should not be empty\"    \r\n}     \r\nelse if(!password_pattern.test(values.password)) {        \r\n   error.password = \"Password didn't match\"    \r\n} else {        \r\n   error.password = \"\"    \r\n}    \r\nreturn error;\r\n}\r\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAC;EACvB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,gEAAgE;EAEzF,IAAGH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAE;IACnBH,KAAK,CAACG,IAAI,GAAG,0BAA0B;EAC3C,CAAC,MACI;IACDH,KAAK,CAACG,IAAI,GAAG,EAAE;EACnB;EAGJ,IAAGJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACpBJ,KAAK,CAACI,KAAK,GAAG,0BAA0B;EAC5C,CAAC,MACI,IAAG,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAE;IACvCJ,KAAK,CAACI,KAAK,GAAG,oBAAoB;EACtC,CAAC,MAAK;IACFJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EAEA,IAAGL,MAAM,CAACO,QAAQ,KAAK,EAAE,EAAE;IACvBN,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MACI,IAAG,CAACJ,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAE;IAC9CN,KAAK,CAACM,QAAQ,GAAG,uBAAuB;EAC3C,CAAC,MAAM;IACJN,KAAK,CAACM,QAAQ,GAAG,EAAE;EACtB;EACA,OAAON,KAAK;AACZ;AAACO,EAAA,GA/BQT,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}